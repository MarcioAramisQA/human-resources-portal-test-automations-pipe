trigger:
  branches:
    include:
      - main
      - master

pr:
  branches:
    include:
      - main
      - master

pool:
  vmImage: "ubuntu-latest"

jobs:
- job: test
  displayName: "Porta RH Test E2E"
  timeoutInMinutes: 60
  steps:
    - checkout: self
      clean: 'true'

    - task: NodeTool@0
      inputs:
          versionSpec: '20.x'

    - script: npm i
      displayName: Install dependencies

    - task: Cache@2
      displayName: "Cache Playwright browsers"
      inputs:
        key: 'playwright | "$(Agent.OS)" | package-lock.json'
        path: ~/.cache/ms-playwright
        restoreKeys: |
          playwright | "$(Agent.OS)"

    - script: npx playwright install --with-deps
      displayName: "Instalar Browsers Playwright"

    - script: |
            mkdir -p onlyTest
            npx playwright test
      displayName: "Rodar E2E tests"
      env:
        CONNECT_MGR: $(CONNECT_MGR)
        CONNECT_HRA: $(CONNECT_HRA)
        CONNECT_PASSWORD: $(CONNECT_PASSWORD)
        CONNECT_URL: $(CONNECT_URL)

    - task: PublishBuildArtifacts@1
      inputs:
          PathtoPublish: 'playwright-report'
          ArtifactName: 'playwright-report'
          publishLocation: 'Container'
      condition: always()
      displayName: 'Publish Playwright Report'

    - task: PublishTestResults@2
      inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'onlyTest/TEST-*.xml'
          failTaskOnFailedTests: true
      condition: always()
      displayName: 'Publish Test Results'

    - script: |
        if [ -f test-results.json ]; then
          if jq -e '[.suites[] | (.tests // [])[] | select((.results // [] | length) > 1)] | length > 0' test-results.json > /dev/null; then
            echo "##vso[task.logissue type=error]Testes instáveis detectados (flaky)."
            exit 1
          fi
        else
          echo "Arquivo test-results.json não encontrado. Pulando verificação de flaky tests."
        fi
      displayName: "Falhar em testes instáveis"
      condition: succeeded()

